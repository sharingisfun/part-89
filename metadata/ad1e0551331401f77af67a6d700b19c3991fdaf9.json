{"title":"Ubuntu 9.04 w/toolchain/buildroot for SB-KOMODO - VirtualBox VM","uid":10750592,"size":3573753983,"categoryP":"applications","categoryS":"unix","magnet":"?xt=urn:btih:ad1e0551331401f77af67a6d700b19c3991fdaf9&amp;dn=Ubuntu+9.04+w%2Ftoolchain%2Fbuildroot+for+SB-KOMODO+-+VirtualBox+VM&amp;tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80&amp;tr=udp%3A%2F%2Fopen.demonii.com%3A1337&amp;tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&amp;tr=udp%3A%2F%2Fexodus.desync.com%3A6969","seeders":0,"leechers":0,"uploader":"graffix2","files":35,"time":1407869325,"description":"Ubuntu 9.04 with toolchain/buildroot.\n\nCopyright (c) 2012 Motorola Mobility Inc All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. 3. The name of the author may not be used to endorse or promote products derived from this software without specific prior written permission. Alternatively, this software may be distributed under the terms of the GNU General Public License (&quot;GPL&quot;) version 2 as published by the Free Software Foundation. THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. GPLv2 license: This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA. ########################################################## OSS components of SB6141 Cable Modem version 1.0.6.1-SCM00 ########################################################## README.txt - This file explains the OSS package contents and how to build. == CONTENTS== Overview Package Info Installation Open Source Toolchain Build Instructions End == OVERVIEW == The SB6141(Sufboard 6141) is a Docsis 3.0 compliant cable modem. Utilizing the power of DOCSIS 3.0, the SB6141 enables channel bonding of up to eight downstream channels and four upstream channels, which allows an operator to offer its customers advanced multimedia services with data rates of over 300 Mbps for received data and over 100 Mbps when sending data. This package contains all the files used in SB6141 that are open source and meant for re-distribution to the community. == PACKAGE INFO == A brief description of the files included in the SB_KOMODO-1.0.6.1-SCM00.tar.bz2 package OSS Package contents -------------------- Here is a list of the OSS packages that SB6141 uses. For details of each package, refer to the README in respective directories. NOTE: &quot;modified&quot; string in the package name implies that the packages are modified by Intel/Motorola. 7zip-0.1 : File archiver tool with a high compression ratio. bbu_driver-sdk3.1 : Kernel driver module for Batter Backup Unit bridge_utils-1.0.4 : This package is for Linux ethernet bridge code. busybox-1.15.2-modified : Contains free unix utilities. cable_ni-sdk3.1 : DOCSIS data path kernel module core-sdk3.1 : DOCSIS Filters/QoS Classifiers Control module dbridge_dlm-sdk3.1 : DOCSIS Bridge kernel module dpp_dlm-sdk3.1 : DOCSIS Packet Processor Kernel Module engine_pro_C-07.05.26-modified : State Machine Engine program in the form of portable standard C exmap-console-0.4.1-modified : Simple command line tool making use of the exmap kernel module flex-2.5.4 : Tool to generate fast lexical analyzers fw_env-1.2.0-modified : Command line user interface to firmware (=U-Boot) environment hal_iov-sdk3.1 : DOCSIS HAL I2c Over VLYNQ kernel module hal_isr-sdk3.1 : DOCSIS HAL Infrastructure Kernel Module hal_soc_interface_driver-sdk3.1 : DOCSIS SoC Interface driver Kernel Module hal_vlynq-sdk3.1 : DOCSIS HAL VLYNQ driver Kernel Module hal_mng_q-sdk3.1 : DOCSIS HAL Management Queue Kernel Module iostat-2.2 : This contains Linux I/O performance monitoring utility. ipsec_tools-0.6.6 : Native IPsec functionality in the Linux 2.6 + kernel. kconfig-0.0.1-modified : Utility to save, copy, delete and restore kernel configuration liboop-0.0.1 : Generic, callback-based event dispatch interface under POSIX-based operating systems linux-2.6.18-modified : The linux kernel. mkimage-1.2.0 : Tool used to create installable application images puma5_toolchain : This contains the tool chain installation script and patches. ruli-0.36-modified : Resolver User Layer Interface library for querying DNS SRV resource records squashfs-3.3 : This is a read only file system for Linux. ti_dhcpv6-1.0-modified : Modified open source DHCPv6 implementation. ti_sysklogd-1.4.1-modified : Kernel and system logging daemons ti_tftp-0.17-modified : Modified open source TFTP implementation ti_udhcp-0.9.9-modified : Implements the DHCPv4 RFC. u-boot-1.2.0-modified : This is the bootloader that is used in our ARM based SB6141 board uClibc-0.9.29-modified : This contains the C library functions for embedded Linux systems. udev-0.5.5 : A user space implementation of dev file system. udhcp-0.9.7-modified : DHCP client and server for embedded systems. utelnetd-0.1.2-modified : A small telnet deamon for embedded systems. vfe_iptv_brg-sdk3.1 : Video Front End IPTV bridge kernel module In addition, the SB_KOMODO-1.0.6.1-SCM00.tar.bz2 package contains the below files dependencies : This contains configs and header files needed for compilation of OSS packages. INSTALL_SCRIPT : Script to create build environment for the OSS package INSTALL_KERNEL_SCRIPT : Script to create build environment for Linux kernel package and the packages that need Linux kernel. == Open Source Toolchain == armeb-linux-uclibceabi-gcc -v CROSS Compiler: gcc version 4.2.0 TI-Puma5 20100224 == \n\nBuild Instructions = 1) Download &quot;SB_KOMODO-1.0.6.1-SCM00.tar.bz2&quot; package 2) Untar the contents using 'tar -xjf SB_KOMODO-1.0.6.1-SCM00.tar.bz2' This will create a directory with name as 'SB_KOMODO-1.0.6.1-SCM00' 3) cd SB_KOMODO-1.0.6.1-SCM00 4) You can see the above mentioned contents. INSTRUCTIONS TO BUILD TOOL CHAIN -------------------------------- 1) Untar the contents of &quot;puma5_toolchain-2010.02.24.tgz&quot; using 'tar -xjf puma5_toolchain-2010.02.24.tgz' 2) This will create a directory with name as 'puma5_toolchain' cd puma5_toolchain/src/ 3) Check and install 'make 3.8.1' and 'unifdef' utilities. Note: &quot;make -v&quot; command can be used to check if make3.8.1 is already installed &quot;rpm -q unifdef&quot; command is used to check if unifdef is already installed 4) Set the PATH to use the make 3.8.1 and unifdef binaries. 5) Create directory /opt/armeb-linux 6) exort TI_PUMA5_TOOLCHAIN_INSTALL_DIR=/opt/armeb-linux 7) Start the build process by running &quot;./build-toolchain.sh&quot; Note: This script takes sometime as it performs - wget and downloads: wget -v --proxy=on --passive-ftp -nd http://www.buildroot.org/downloads/$BUILDROOT_NAME.tar.bz2 - On top of that adds patches from /src folder. 8) After successful compilation, new Toolchain will be available under: /opt/armeb-linux/ti-puma5/usr/bin 9) export PATH=${PATH}:/opt/armeb-linux/ti-puma5/usr/bin \n\n\nINSTRUCTIONS TO CREATE BUILD ENVIRONMENT ---------------------------------------- 1) Follow steps 2 &amp; 3 only if you copy any OSS package from SB_KOMODO-1.0.6.1-SCM00 directory to any other path. If you are going to buid the individual packages inside the SB_KOMODO-1.0.6.1-SCM00 directory itself, you can skip steps 2 &amp; 3, as they are already in place. 2) Place the below script files from the package at the path where you are going to compile OSS package - INSTALL_SCRIPT - INSTALL_KERNEL_SCRIPT eg: if the package you are going to build is at /root/ copy the script files to /root/ 3) Place the &quot;dependencies.tar.bz2&quot; from the package at the path where you are going to compile OSS package eg: if the package you are going to build is at /root/ copy the dependencies.tar.bz2 to /root/ 4) tar -xjf dependencies.tar.bz2 5) Copy the below commands at the path where you are going to compile OSS package. eg: if the package that you are going to build is at /root/ cd /root/ and copy the below commands. export TARGET_HOME=`pwd` export PRODUCT_NAME=dsdk export KERNEL_DIR=${TARGET_HOME}/linux-2.6.18-modified/src export TI_tools_path=${TARGET_HOME}/tools export TI_filesystem_path=${TARGET_HOME}/build/{PRODUCT_NAME}/fs export TI_build_root=${TARGET_HOME} export TI_lib_path=${TARGET_HOME}/ti/lib export TI_include=${TARGET_HOME}/ti/include 6) If you do not want to use the linux kernel(linux-2.6.18-modified) in the SB_KOMODO-1.0.6.1-SCM00 package and would like to build the packages that are dependent on linux kernel with your linux kernel, you need to update the KERNEL_DIR variable with the path of your linux kernel source. 7) run INSTALL_SCRIPT ./INSTALL_SCRIPT \n\n\nINSTRUCTIONS TO BUILD linux-2.6.18 ---------------------------------- To build Linux kernel 1) Untar the contents of linux-2.6.18-modified.tar.bz2 package using 'tar -xjf linux-2.6.18.tar.bz2'. This will create a directory with name as linux-2.6.18-modified 2) If you are building linux-2.6.18-modified inside the SB_KOMODO-1.0.6.1-SCM00 directory itself, you can skip next step. 3) Copy 7zip-0.1.tar.bz2 to the same path as linux-2.6.18-modified 4) untar the contents using 'tar -xjf 7zip-0.1.tar.bz2' 5) run INSTALL_KERNEL_SCRIPT ./INSTALL_KERNEL_SCRIPT 6) cd ${KERNEL_DIR} 7) echo &quot;armeb-linux-uclibceabi-&quot; &gt; .mvl_cross_compile 8) make oldconfig 9) make \n\n\nINSTRUCTIONS TO BUILD MODULES THAT NEED LINUX KERNEL ---------------------------------------------------- 1) Build linux kernel first(follow above instructions) 2) If you do not want to use the linux kernel(linux-2.6.18-modified) in the SB_KOMODO-1.0.6.1-SCM00 package and would like to build the packages with your linux kernel, you need to update the KERNEL_DIR variable with the path of your linux kernel source. 3) Untar the contents of the package that you want to build using 'tar -xjf .tar.bz2'. This will create a directory with same name as / The modules that fall under this category: - bbu_driver-sdk3.1 - cable_ni-sdk3.1 - core-sdk3.1 - dbridge_dlm-sdk3.1 - dpp_dlm-sdk3.1 - exmap-console-0.4.1-modified - fw_env-1.2.0-modified - hal_iov-sdk3.1 - hal_isr-sdk3.1 - hal_soc_interface_driver-sdk3.1 - hal_vlynq-sdk3.1 - hal_mng_q-sdk3.1 - ti_udhcp-0.9.9-modified - vfe_iptv_brg-sdk3.1 \n\n\nINSTRUCTIONS TO BUILD ipsec_tools-0.6.6 --------------------------------------- 1) Untar the contents of the flex-2.5.4.tar.bz2 package using 'tar -xjf flex-2.5.4.tar.bz2'. This will create a directory with name flex-2.5.4 2) cd flex-2.5.4 3) make -f Makefile.flat 4) Untar the contents of the ipsec_tools-0.6.6.tar.bz2 package using tar -xjf ipsec_tools-0.6.6.tar.bz2 This will create a directory with name ipsec_tools-0.6.6 5) cd ipsec_tools-0.6.6 6) make -f Makefile.flat \n\n\nINSTRUCTIONS TO BUILD ruli-0.36-modified ---------------------------------------- 1) Untar the contents of the liboop-0.0.1.tar.bz2 package using tar -xjf liboop-0.0.1.tar.bz2 This will create a directory with name liboop-0.0.1 2) cd liboop-0.0.1 3) make -f Makefile.flat 4) Untar the contents of the ruli-0.36-modified.tar.bz2 package using tar -xjf ruli-0.36-modified.tar.bz2. This will create a directory with name ruli-0.36-modified 5) cd ruli-0.36-modified 6) make -f Makefile.flat \n\n\nINSTRUCTIONS TO BUILD ti_dhcpv6-1.0-modified -------------------------------------------- 1) Untar the contents of the package flex-2.5.4.tar.bz2 using tar -xjf flex-2.5.4.tar.bz2. This will create a directory with name flex-2.5.4 2) cd flex-2.5.4 3) make -f Makefile.flat 4) Untar the contents of the ti_dhcpv6-1.0-modified.tar.bz2 package using tar -xjf ti_dhcpv6-1.0-modified.tar.bz2 This will create a directory with name ti_dhcpv6-1.0-modified 5) cd ti_dhcpv6-1.0-modified 6) make -f Makefile.flat \n\n\nINSTRUCTIONS TO BUILD u-boot-1.2.0-modified -------------------------------------------- 1) Untar the contents of the package u-boot-1.2.0-modified.tar.bz2 using tar -xjf u-boot-1.2.0-modified.tar.bz2. This will create a directory with name u-boot-1.2.0-modified 2) cd u-boot-1.2.0-modified 3) export CONFIG_MOTO_PSPUBOOT_25_MHZ_CLK_ENABLE=y 4) make tnetc550_config 5) make CROSS_COMPILE=armeb-linux-uclibceabi- all \n\n\nINSTRUCTIONS TO BUILD ALL OTHER PACKAGES ---------------------------------------- 1) Untar the contents of the package using tar -xjf .tar.bz2. This will create a directory with name  2) cd  3) Do 'make -f Makefile.flat' to build the packages that has Makefile.flat The modules that fall under this category: - 7zip-0.1 - bridge_utils-1.0.4 - busybox-1.15.2-modified - exmap-console-0.4.1-modified - fw_env-1.2.0-modified - flex-2.5.4 - kconfig-0.0.1-modified - liboop-0.0.1 - mkimage-1.2.0 - squashfs-3.3 - ti_sysklogd-1.4.1-modified - ti_udhcp-0.9.9-modified - uClibc-0.9.29-modified NOTE: If you do 'make -f Makefile.flat clean', you have to run INSTALL_SCRIPT &amp; INSTALL_KERNEL_SCRIPT, before doing 'make -f Makefile.flat' - udev-0.5.5 - udhcp-0.9.7-modified - utelnetd-0.1.2-modified 4) Do 'make' or 'make CROSS_COMPILE=armeb-linux-uclibceabi-' for the packages that doesn't contain Makefile.flat","torrent":{"xt":"urn:btih:ad1e0551331401f77af67a6d700b19c3991fdaf9","amp;dn":"Ubuntu+9.04+w%2Ftoolchain%2Fbuildroot+for+SB-KOMODO+-+VirtualBox+VM","amp;tr":["udp%3A%2F%2Ftracker.openbittorrent.com%3A80","udp%3A%2F%2Fopen.demonii.com%3A1337","udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969","udp%3A%2F%2Fexodus.desync.com%3A6969"],"infoHash":"ad1e0551331401f77af67a6d700b19c3991fdaf9","infoHashBuffer":{"type":"Buffer","data":[173,30,5,81,51,20,1,247,122,246,122,109,112,11,25,195,153,31,218,249]},"announce":[],"urlList":[]}}